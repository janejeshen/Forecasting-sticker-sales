{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":85723,"databundleVersionId":10652996,"sourceType":"competition"}],"dockerImageVersionId":30839,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"#### Importing libraries","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\nimport seaborn as sns\nplt.style.use('ggplot')\nimport os\nimport random, warnings\nfrom IPython.display import display\n\n\n# To ignore all warnings\nwarnings.filterwarnings(\"ignore\")\n# pd.set_option(\"display.max_rows\",None)\n\n# Setting seed for reproducability\nSEED = 42\nrandom.seed(SEED)\nnp.random.seed(SEED)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:13.665635Z","iopub.execute_input":"2025-01-15T13:49:13.666197Z","iopub.status.idle":"2025-01-15T13:49:13.679276Z","shell.execute_reply.started":"2025-01-15T13:49:13.666151Z","shell.execute_reply":"2025-01-15T13:49:13.678087Z"}},"outputs":[],"execution_count":53},{"cell_type":"code","source":"# Loading the data sets\ntrain = pd.read_csv(\"/kaggle/input/playground-series-s5e1/train.csv\")\ntest = pd.read_csv(\"/kaggle/input/playground-series-s5e1/test.csv\")\nsample_submission = pd.read_csv(\"/kaggle/input/playground-series-s5e1/sample_submission.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:13.681317Z","iopub.execute_input":"2025-01-15T13:49:13.681798Z","iopub.status.idle":"2025-01-15T13:49:14.003762Z","shell.execute_reply.started":"2025-01-15T13:49:13.681753Z","shell.execute_reply":"2025-01-15T13:49:14.002636Z"}},"outputs":[],"execution_count":54},{"cell_type":"code","source":"# previewing the train dataset\nprint(\"\\033[1mFirst five rows\\n---------------------------------\\033[0m\")\ndisplay(train.head())\nprint(\"\\033[1mLast five rows\\n----------------------------------\\033[0m\")\ndisplay(train.tail())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:14.005451Z","iopub.execute_input":"2025-01-15T13:49:14.005870Z","iopub.status.idle":"2025-01-15T13:49:14.030820Z","shell.execute_reply.started":"2025-01-15T13:49:14.005830Z","shell.execute_reply":"2025-01-15T13:49:14.029368Z"}},"outputs":[{"name":"stdout","text":"\u001b[1mFirst five rows\n---------------------------------\u001b[0m\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"   id        date country              store             product  num_sold\n0   0  2010-01-01  Canada  Discount Stickers   Holographic Goose       NaN\n1   1  2010-01-01  Canada  Discount Stickers              Kaggle     973.0\n2   2  2010-01-01  Canada  Discount Stickers        Kaggle Tiers     906.0\n3   3  2010-01-01  Canada  Discount Stickers            Kerneler     423.0\n4   4  2010-01-01  Canada  Discount Stickers  Kerneler Dark Mode     491.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>date</th>\n      <th>country</th>\n      <th>store</th>\n      <th>product</th>\n      <th>num_sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kaggle</td>\n      <td>973.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kaggle Tiers</td>\n      <td>906.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kerneler</td>\n      <td>423.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kerneler Dark Mode</td>\n      <td>491.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"name":"stdout","text":"\u001b[1mLast five rows\n----------------------------------\u001b[0m\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"            id        date    country                 store  \\\n230125  230125  2016-12-31  Singapore  Premium Sticker Mart   \n230126  230126  2016-12-31  Singapore  Premium Sticker Mart   \n230127  230127  2016-12-31  Singapore  Premium Sticker Mart   \n230128  230128  2016-12-31  Singapore  Premium Sticker Mart   \n230129  230129  2016-12-31  Singapore  Premium Sticker Mart   \n\n                   product  num_sold  \n230125   Holographic Goose     466.0  \n230126              Kaggle    2907.0  \n230127        Kaggle Tiers    2299.0  \n230128            Kerneler    1242.0  \n230129  Kerneler Dark Mode    1622.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>date</th>\n      <th>country</th>\n      <th>store</th>\n      <th>product</th>\n      <th>num_sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>230125</th>\n      <td>230125</td>\n      <td>2016-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Holographic Goose</td>\n      <td>466.0</td>\n    </tr>\n    <tr>\n      <th>230126</th>\n      <td>230126</td>\n      <td>2016-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Kaggle</td>\n      <td>2907.0</td>\n    </tr>\n    <tr>\n      <th>230127</th>\n      <td>230127</td>\n      <td>2016-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Kaggle Tiers</td>\n      <td>2299.0</td>\n    </tr>\n    <tr>\n      <th>230128</th>\n      <td>230128</td>\n      <td>2016-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Kerneler</td>\n      <td>1242.0</td>\n    </tr>\n    <tr>\n      <th>230129</th>\n      <td>230129</td>\n      <td>2016-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Kerneler Dark Mode</td>\n      <td>1622.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":55},{"cell_type":"code","source":"# previewing the test dataset\nprint(\"\\033[1mFirst five rows\\n---------------------------------\\033[0m\")\ndisplay(test.head())\nprint(\"\\033[1mLast five rows\\n----------------------------------\\033[0m\")\ndisplay(test.tail())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:14.032497Z","iopub.execute_input":"2025-01-15T13:49:14.032934Z","iopub.status.idle":"2025-01-15T13:49:14.056376Z","shell.execute_reply.started":"2025-01-15T13:49:14.032896Z","shell.execute_reply":"2025-01-15T13:49:14.055409Z"}},"outputs":[{"name":"stdout","text":"\u001b[1mFirst five rows\n---------------------------------\u001b[0m\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"       id        date country              store             product\n0  230130  2017-01-01  Canada  Discount Stickers   Holographic Goose\n1  230131  2017-01-01  Canada  Discount Stickers              Kaggle\n2  230132  2017-01-01  Canada  Discount Stickers        Kaggle Tiers\n3  230133  2017-01-01  Canada  Discount Stickers            Kerneler\n4  230134  2017-01-01  Canada  Discount Stickers  Kerneler Dark Mode","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>date</th>\n      <th>country</th>\n      <th>store</th>\n      <th>product</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>230130</td>\n      <td>2017-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>230131</td>\n      <td>2017-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kaggle</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>230132</td>\n      <td>2017-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kaggle Tiers</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>230133</td>\n      <td>2017-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kerneler</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>230134</td>\n      <td>2017-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Kerneler Dark Mode</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"name":"stdout","text":"\u001b[1mLast five rows\n----------------------------------\u001b[0m\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"           id        date    country                 store             product\n98545  328675  2019-12-31  Singapore  Premium Sticker Mart   Holographic Goose\n98546  328676  2019-12-31  Singapore  Premium Sticker Mart              Kaggle\n98547  328677  2019-12-31  Singapore  Premium Sticker Mart        Kaggle Tiers\n98548  328678  2019-12-31  Singapore  Premium Sticker Mart            Kerneler\n98549  328679  2019-12-31  Singapore  Premium Sticker Mart  Kerneler Dark Mode","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>date</th>\n      <th>country</th>\n      <th>store</th>\n      <th>product</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>98545</th>\n      <td>328675</td>\n      <td>2019-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Holographic Goose</td>\n    </tr>\n    <tr>\n      <th>98546</th>\n      <td>328676</td>\n      <td>2019-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Kaggle</td>\n    </tr>\n    <tr>\n      <th>98547</th>\n      <td>328677</td>\n      <td>2019-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Kaggle Tiers</td>\n    </tr>\n    <tr>\n      <th>98548</th>\n      <td>328678</td>\n      <td>2019-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Kerneler</td>\n    </tr>\n    <tr>\n      <th>98549</th>\n      <td>328679</td>\n      <td>2019-12-31</td>\n      <td>Singapore</td>\n      <td>Premium Sticker Mart</td>\n      <td>Kerneler Dark Mode</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":56},{"cell_type":"code","source":"# previewing the sample submission dataset\nprint(\"\\033[1mFirst five rows\\n---------------------------------\\033[0m\")\ndisplay(sample_submission.head())\nprint(\"\\033[1mLast five rows\\n----------------------------------\\033[0m\")\ndisplay(sample_submission.tail())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:14.057295Z","iopub.execute_input":"2025-01-15T13:49:14.057572Z","iopub.status.idle":"2025-01-15T13:49:14.073027Z","shell.execute_reply.started":"2025-01-15T13:49:14.057540Z","shell.execute_reply":"2025-01-15T13:49:14.071845Z"}},"outputs":[{"name":"stdout","text":"\u001b[1mFirst five rows\n---------------------------------\u001b[0m\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"       id  num_sold\n0  230130       100\n1  230131       100\n2  230132       100\n3  230133       100\n4  230134       100","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>num_sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>230130</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>230131</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>230132</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>230133</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>230134</td>\n      <td>100</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"name":"stdout","text":"\u001b[1mLast five rows\n----------------------------------\u001b[0m\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"           id  num_sold\n98545  328675       100\n98546  328676       100\n98547  328677       100\n98548  328678       100\n98549  328679       100","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>num_sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>98545</th>\n      <td>328675</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>98546</th>\n      <td>328676</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>98547</th>\n      <td>328677</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>98548</th>\n      <td>328678</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>98549</th>\n      <td>328679</td>\n      <td>100</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":57},{"cell_type":"markdown","source":"##### Preliminary Data Inspection","metadata":{}},{"cell_type":"code","source":"# Getting the shape of the train and test dataset\nprint(f\"The train dataset has {train.shape[0]} rows and {train.shape[1]} columns\")\nprint(f\"The test dataset has {test.shape[0]} rows and {test.shape[1]} columns\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:14.074247Z","iopub.execute_input":"2025-01-15T13:49:14.074683Z","iopub.status.idle":"2025-01-15T13:49:14.089623Z","shell.execute_reply.started":"2025-01-15T13:49:14.074638Z","shell.execute_reply":"2025-01-15T13:49:14.087481Z"}},"outputs":[{"name":"stdout","text":"The train dataset has 230130 rows and 6 columns\nThe test dataset has 98550 rows and 5 columns\n","output_type":"stream"}],"execution_count":58},{"cell_type":"code","source":"# Checking the data types of columns in the dataset\nprint(train.dtypes)\nprint(f\"____________________________\\n{train.dtypes.value_counts()}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:14.092358Z","iopub.execute_input":"2025-01-15T13:49:14.092718Z","iopub.status.idle":"2025-01-15T13:49:14.112361Z","shell.execute_reply.started":"2025-01-15T13:49:14.092686Z","shell.execute_reply":"2025-01-15T13:49:14.111070Z"}},"outputs":[{"name":"stdout","text":"id            int64\ndate         object\ncountry      object\nstore        object\nproduct      object\nnum_sold    float64\ndtype: object\n____________________________\nobject     4\nint64      1\nfloat64    1\nName: count, dtype: int64\n","output_type":"stream"}],"execution_count":59},{"cell_type":"code","source":"# Getting the 'data' about the dataset\nprint(train.info())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:14.113972Z","iopub.execute_input":"2025-01-15T13:49:14.114264Z","iopub.status.idle":"2025-01-15T13:49:14.191488Z","shell.execute_reply.started":"2025-01-15T13:49:14.114241Z","shell.execute_reply":"2025-01-15T13:49:14.190095Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 230130 entries, 0 to 230129\nData columns (total 6 columns):\n #   Column    Non-Null Count   Dtype  \n---  ------    --------------   -----  \n 0   id        230130 non-null  int64  \n 1   date      230130 non-null  object \n 2   country   230130 non-null  object \n 3   store     230130 non-null  object \n 4   product   230130 non-null  object \n 5   num_sold  221259 non-null  float64\ndtypes: float64(1), int64(1), object(4)\nmemory usage: 10.5+ MB\nNone\n","output_type":"stream"}],"execution_count":60},{"cell_type":"code","source":"# Obtaining the summary descriptive statistics of the data\ntrain.describe(include=\"all\").T","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:14.192448Z","iopub.execute_input":"2025-01-15T13:49:14.192767Z","iopub.status.idle":"2025-01-15T13:49:14.336636Z","shell.execute_reply.started":"2025-01-15T13:49:14.192741Z","shell.execute_reply":"2025-01-15T13:49:14.335700Z"}},"outputs":[{"execution_count":61,"output_type":"execute_result","data":{"text/plain":"             count unique                top   freq        mean           std  \\\nid        230130.0    NaN                NaN    NaN    115064.5  66432.953062   \ndate        230130   2557         2010-01-01     90         NaN           NaN   \ncountry     230130      6             Canada  38355         NaN           NaN   \nstore       230130      3  Discount Stickers  76710         NaN           NaN   \nproduct     230130      5  Holographic Goose  46026         NaN           NaN   \nnum_sold  221259.0    NaN                NaN    NaN  752.527382    690.165445   \n\n          min       25%       50%        75%       max  \nid        0.0  57532.25  115064.5  172596.75  230129.0  \ndate      NaN       NaN       NaN        NaN       NaN  \ncountry   NaN       NaN       NaN        NaN       NaN  \nstore     NaN       NaN       NaN        NaN       NaN  \nproduct   NaN       NaN       NaN        NaN       NaN  \nnum_sold  5.0     219.0     605.0     1114.0    5939.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>unique</th>\n      <th>top</th>\n      <th>freq</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>id</th>\n      <td>230130.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>115064.5</td>\n      <td>66432.953062</td>\n      <td>0.0</td>\n      <td>57532.25</td>\n      <td>115064.5</td>\n      <td>172596.75</td>\n      <td>230129.0</td>\n    </tr>\n    <tr>\n      <th>date</th>\n      <td>230130</td>\n      <td>2557</td>\n      <td>2010-01-01</td>\n      <td>90</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>country</th>\n      <td>230130</td>\n      <td>6</td>\n      <td>Canada</td>\n      <td>38355</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>store</th>\n      <td>230130</td>\n      <td>3</td>\n      <td>Discount Stickers</td>\n      <td>76710</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>product</th>\n      <td>230130</td>\n      <td>5</td>\n      <td>Holographic Goose</td>\n      <td>46026</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>num_sold</th>\n      <td>221259.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>752.527382</td>\n      <td>690.165445</td>\n      <td>5.0</td>\n      <td>219.0</td>\n      <td>605.0</td>\n      <td>1114.0</td>\n      <td>5939.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":61},{"cell_type":"markdown","source":"* The num_sold column has missing values. \n* The mininum amount of stickers sold is 5 and the maximum is 5,939 stickers.\n* The id column should be casted to object.\n* The date column should be of datetime type.\n* Four columns in the data set are of object datatype and two are numerical.","metadata":{}},{"cell_type":"markdown","source":"#### Data Preparation\n##### Data cleaning\n* Checking for missing values and handling them\n* Checking for duplicates and handling them\n* Converting the incorrect datatypes to the correct ones.","metadata":{}},{"cell_type":"code","source":"# Checking for missing values\ntrain.isna().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:14.337976Z","iopub.execute_input":"2025-01-15T13:49:14.338272Z","iopub.status.idle":"2025-01-15T13:49:14.392837Z","shell.execute_reply.started":"2025-01-15T13:49:14.338248Z","shell.execute_reply":"2025-01-15T13:49:14.391882Z"}},"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"id             0\ndate           0\ncountry        0\nstore          0\nproduct        0\nnum_sold    8871\ndtype: int64"},"metadata":{}}],"execution_count":62},{"cell_type":"code","source":"# Checking the percentage of missing values in num_sold column\npercent_missing_num_sold = train[\"num_sold\"].isnull().sum() * 100 / len(train[\"num_sold\"])\nprint(percent_missing_num_sold)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:14.393981Z","iopub.execute_input":"2025-01-15T13:49:14.394370Z","iopub.status.idle":"2025-01-15T13:49:14.406207Z","shell.execute_reply.started":"2025-01-15T13:49:14.394329Z","shell.execute_reply":"2025-01-15T13:49:14.404817Z"}},"outputs":[{"name":"stdout","text":"3.854777734324078\n","output_type":"stream"}],"execution_count":63},{"cell_type":"code","source":"null_values = train[train[\"num_sold\"].isnull()]\nnull_values.head(10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:14.407667Z","iopub.execute_input":"2025-01-15T13:49:14.408083Z","iopub.status.idle":"2025-01-15T13:49:14.431578Z","shell.execute_reply.started":"2025-01-15T13:49:14.408043Z","shell.execute_reply":"2025-01-15T13:49:14.430584Z"}},"outputs":[{"execution_count":64,"output_type":"execute_result","data":{"text/plain":"      id        date country              store            product  num_sold\n0      0  2010-01-01  Canada  Discount Stickers  Holographic Goose       NaN\n45    45  2010-01-01   Kenya  Discount Stickers  Holographic Goose       NaN\n90    90  2010-01-02  Canada  Discount Stickers  Holographic Goose       NaN\n135  135  2010-01-02   Kenya  Discount Stickers  Holographic Goose       NaN\n180  180  2010-01-03  Canada  Discount Stickers  Holographic Goose       NaN\n225  225  2010-01-03   Kenya  Discount Stickers  Holographic Goose       NaN\n270  270  2010-01-04  Canada  Discount Stickers  Holographic Goose       NaN\n315  315  2010-01-04   Kenya  Discount Stickers  Holographic Goose       NaN\n320  320  2010-01-04   Kenya  Stickers for Less  Holographic Goose       NaN\n360  360  2010-01-05  Canada  Discount Stickers  Holographic Goose       NaN","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>date</th>\n      <th>country</th>\n      <th>store</th>\n      <th>product</th>\n      <th>num_sold</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>2010-01-01</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>45</td>\n      <td>2010-01-01</td>\n      <td>Kenya</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>90</th>\n      <td>90</td>\n      <td>2010-01-02</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>135</th>\n      <td>135</td>\n      <td>2010-01-02</td>\n      <td>Kenya</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>180</th>\n      <td>180</td>\n      <td>2010-01-03</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>225</th>\n      <td>225</td>\n      <td>2010-01-03</td>\n      <td>Kenya</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>270</th>\n      <td>270</td>\n      <td>2010-01-04</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>315</th>\n      <td>315</td>\n      <td>2010-01-04</td>\n      <td>Kenya</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>320</th>\n      <td>320</td>\n      <td>2010-01-04</td>\n      <td>Kenya</td>\n      <td>Stickers for Less</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>360</th>\n      <td>360</td>\n      <td>2010-01-05</td>\n      <td>Canada</td>\n      <td>Discount Stickers</td>\n      <td>Holographic Goose</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":64},{"cell_type":"markdown","source":"The missing values in the num_sold column are missing at random","metadata":{}},{"cell_type":"code","source":"# Dropping the missing values in the num_sold column\ntrain = train.dropna()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:14.432549Z","iopub.execute_input":"2025-01-15T13:49:14.432846Z","iopub.status.idle":"2025-01-15T13:49:14.499251Z","shell.execute_reply.started":"2025-01-15T13:49:14.432821Z","shell.execute_reply":"2025-01-15T13:49:14.498123Z"}},"outputs":[],"execution_count":65},{"cell_type":"code","source":"# Checkin if dropping is successful\n9train.isna().any()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:14.500778Z","iopub.execute_input":"2025-01-15T13:49:14.501182Z","iopub.status.idle":"2025-01-15T13:49:14.551789Z","shell.execute_reply.started":"2025-01-15T13:49:14.501148Z","shell.execute_reply":"2025-01-15T13:49:14.550658Z"}},"outputs":[{"execution_count":66,"output_type":"execute_result","data":{"text/plain":"id          False\ndate        False\ncountry     False\nstore       False\nproduct     False\nnum_sold    False\ndtype: bool"},"metadata":{}}],"execution_count":66},{"cell_type":"code","source":"# Checking for duplicates\ntrain.duplicated().any()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:49:54.204888Z","iopub.execute_input":"2025-01-15T13:49:54.205231Z","iopub.status.idle":"2025-01-15T13:49:54.310743Z","shell.execute_reply.started":"2025-01-15T13:49:54.205204Z","shell.execute_reply":"2025-01-15T13:49:54.309647Z"}},"outputs":[{"execution_count":70,"output_type":"execute_result","data":{"text/plain":"False"},"metadata":{}}],"execution_count":70},{"cell_type":"markdown","source":"##### Type casting the incorrect data types to the correct ones","metadata":{}},{"cell_type":"code","source":"# Convertin id column from int64 to a string\ntrain[\"id\"]= train[\"id\"].values.astype(str)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:50:00.435763Z","iopub.execute_input":"2025-01-15T13:50:00.436218Z","iopub.status.idle":"2025-01-15T13:50:00.534855Z","shell.execute_reply.started":"2025-01-15T13:50:00.436180Z","shell.execute_reply":"2025-01-15T13:50:00.533641Z"}},"outputs":[],"execution_count":71},{"cell_type":"code","source":"# Conveing the date column from object to datetime data type\ntrain[\"date\"]=pd.to_datetime(train[\"date\"])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:56:20.664684Z","iopub.execute_input":"2025-01-15T13:56:20.665104Z","iopub.status.idle":"2025-01-15T13:56:20.775668Z","shell.execute_reply.started":"2025-01-15T13:56:20.665073Z","shell.execute_reply":"2025-01-15T13:56:20.774426Z"}},"outputs":[],"execution_count":76},{"cell_type":"code","source":"# Checking the datatypes\ntrain.dtypes","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-15T13:57:35.300675Z","iopub.execute_input":"2025-01-15T13:57:35.301017Z","iopub.status.idle":"2025-01-15T13:57:35.308309Z","shell.execute_reply.started":"2025-01-15T13:57:35.300991Z","shell.execute_reply":"2025-01-15T13:57:35.307241Z"}},"outputs":[{"execution_count":79,"output_type":"execute_result","data":{"text/plain":"id                  object\ndate        datetime64[ns]\ncountry             object\nstore               object\nproduct             object\nnum_sold           float64\ndtype: object"},"metadata":{}}],"execution_count":79},{"cell_type":"markdown","source":"#### Exploratory Data Analysis\nIn this section, trends and patterns are examined using statistics and visualizations to demonstrate the relationships between the variables in the data.\n\n##### 1. Univariate Analysis","metadata":{}},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}